const ytdl = require('ytdl-core');
const axios = require('axios');
const xml2js = require('xml2js');

async function getCaptions(videoID, lang = 'en') {
  try {
    const info = await ytdl.getInfo(videoID);
    const tracks = info.player_response.captions.playerCaptionsTracklistRenderer.captionTracks;

    if (!tracks || tracks.length === 0)
      throw new Error('No captions found for this video.');

    // Try to find the default caption track
    const defaultTrack = tracks.find(track => track.languageCode === lang && track.kind !== 'asr');

    if (defaultTrack) {
      console.log('Default captions found.');
      return await downloadAndSaveCaptions(defaultTrack.baseUrl);
    } else {
      // Try to find the auto-generated caption track
      const autoGeneratedTrack = tracks.find(track => track.kind === 'asr' && track.languageCode === lang);

      if (autoGeneratedTrack) {
        console.log('Default captions not found. Auto-generated captions found.');
        return await downloadAndSaveCaptions(autoGeneratedTrack.baseUrl);
      } else {
        throw new Error('No captions available.');
      }
    }
  } catch (err) {
    console.error('Error fetching captions:', err);
  }
}

async function downloadAndSaveCaptions(url) {
  try {
    const response = await axios.get(url);
    const captions = response.data;
		let srtCaptions = '';

    xml2js.parseString(captions, (err, result) => {
      if (err) {
        console.error('Error parsing XML:', err);
        return;
      }

      const events = result.transcript.text;
      srtCaptions = events.map((event, index) => {
        const start = new Date(parseFloat(event.$.start) * 1000).toISOString().substr(11, 12).replace('.', ',');
        const duration = parseFloat(event.$.dur) * 1000;
        const end = new Date(parseFloat(event.$.start) * 1000 + duration).toISOString().substr(11, 12).replace('.', ',');

        return `${index + 1}\n${start} --> ${end}\n${event._}\n`;
      }).join('\n');

      // Save to file
    });
		console.log('srtCaptions:', srtCaptions);
		return srtCaptions;
  } catch (err) {
    console.error('Error downloading captions:', err);
  }
}

module.exports = {
	getCaptions
};
